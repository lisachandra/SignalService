"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[556],{26437:function(e,l,n){n.r(l),n.d(l,{frontMatter:function(){return r},contentTitle:function(){return o},metadata:function(){return u},toc:function(){return c},default:function(){return s}});var i=n(87462),t=n(63366),a=(n(67294),n(3905)),d=["components"],r={},o="Changelog",u={type:"mdx",permalink:"/SignalService/CHANGELOG",source:"@site/pages/CHANGELOG.md"},c=[{value:"0.4.2 - 2022-01-04",id:"042---2022-01-04",children:[{value:"Added",id:"added",children:[],level:3},{value:"Removed",id:"removed",children:[],level:3}],level:2},{value:"0.4.1 - 2021-12-24",id:"041---2021-12-24",children:[{value:"Added",id:"added-1",children:[],level:3}],level:2},{value:"0.4.0 - 2021-12-24",id:"040---2021-12-24",children:[{value:"Added",id:"added-2",children:[],level:3}],level:2},{value:"0.3.1 - 2021-12-22",id:"031---2021-12-22",children:[{value:"Added",id:"added-3",children:[],level:3}],level:2},{value:"0.3.0 - 2021-12-22",id:"030---2021-12-22",children:[{value:"Added",id:"added-4",children:[],level:3}],level:2},{value:"0.2.2 - 2021-12-22",id:"022---2021-12-22",children:[{value:"Added",id:"added-5",children:[],level:3},{value:"Changed",id:"changed",children:[],level:3},{value:"Fixed",id:"fixed",children:[],level:3},{value:"Removed",id:"removed-1",children:[],level:3}],level:2},{value:"0.2.1 - 2021-12-20",id:"021---2021-12-20",children:[{value:"Changed",id:"changed-1",children:[],level:3}],level:2},{value:"0.2.0 - 2021-12-20",id:"020---2021-12-20",children:[{value:"Added",id:"added-6",children:[],level:3},{value:"Changed",id:"changed-2",children:[],level:3},{value:"Fixed",id:"fixed-1",children:[],level:3}],level:2},{value:"0.1.0 - 2021-12-19",id:"010---2021-12-19",children:[],level:2}],h={toc:c};function s(e){var l=e.components,n=(0,t.Z)(e,d);return(0,a.kt)("wrapper",(0,i.Z)({},h,n,{components:l,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"changelog"},"Changelog"),(0,a.kt)("p",null,"(almost) All changes in this project will be documented here."),(0,a.kt)("p",null,"This project follows ",(0,a.kt)("a",{parentName:"p",href:"https://semver.org/spec/v2.0.0.html"},"Semantic Versioning"),"."),(0,a.kt)("h2",{id:"042---2022-01-04"},"0.4.2 - 2022-01-04"),(0,a.kt)("h3",{id:"added"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SignalService, Signal and Connection types to init.lua")),(0,a.kt)("h3",{id:"removed"},"Removed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"intellisense module")),(0,a.kt)("h2",{id:"041---2021-12-24"},"0.4.1 - 2021-12-24"),(0,a.kt)("h3",{id:"added-1"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://zxibs.github.io/SignalService/"},"Moonwave documentation"))),(0,a.kt)("h2",{id:"040---2021-12-24"},"0.4.0 - 2021-12-24"),(0,a.kt)("h3",{id:"added-2"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<Signal>:Dispatch()")," which is very similar to ",(0,a.kt)("a",{parentName:"li",href:"https://roblox.github.io/rodux/api-reference/#storedispatch"},(0,a.kt)("inlineCode",{parentName:"a"},"Rodux.Store:dispatch()"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<Signal>:onDispatch()")," which is very similar to ",(0,a.kt)("a",{parentName:"li",href:"https://roblox.github.io/rodux/api-reference/#roduxcreatereducer"},(0,a.kt)("inlineCode",{parentName:"a"},"Rodux.createReducer()")))),(0,a.kt)("h2",{id:"031---2021-12-22"},"0.3.1 - 2021-12-22"),(0,a.kt)("h3",{id:"added-3"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"A strict interface to SignalService")),(0,a.kt)("h2",{id:"030---2021-12-22"},"0.3.0 - 2021-12-22"),(0,a.kt)("h3",{id:"added-4"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Type checks using ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/osyrisrblx/t"},"t module"),".")),(0,a.kt)("h2",{id:"022---2021-12-22"},"0.2.2 - 2021-12-22"),(0,a.kt)("h3",{id:"added-5"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://github.com/zxibs/SignalService/blob/main/src/intellisense.lua"},"Intellisense module"))),(0,a.kt)("h3",{id:"changed"},"Changed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Unique ID generation for connections to avoid the very unlikely case of an id being the same as another")),(0,a.kt)("h3",{id:"fixed"},"Fixed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Callbacks not firing")),(0,a.kt)("h3",{id:"removed-1"},"Removed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Removed EmmyLua annotations and moved it to the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/zxibs/SignalService/blob/main/src/intellisense.lua"},"intellisense module"))),(0,a.kt)("h2",{id:"021---2021-12-20"},"0.2.1 - 2021-12-20"),(0,a.kt)("h3",{id:"changed-1"},"Changed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://wally.run/package/zxibs/signalservice"},"Wally package")," now only includes the files inside src.")),(0,a.kt)("h2",{id:"020---2021-12-20"},"0.2.0 - 2021-12-20"),(0,a.kt)("h3",{id:"added-6"},"Added"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"SignalService is now on ",(0,a.kt)("a",{parentName:"li",href:"https://wally.run/package/zxibs/signalservice"},"wally"),"!"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<Signal>:Destroy()")," now sets the signal's metatable to nil and runs ",(0,a.kt)("inlineCode",{parentName:"li"},"<Signal>:DisconnectAll()")," before destroying"),(0,a.kt)("li",{parentName:"ul"},"A __tostring metatable that returns the ClassName (Signal or Connection) to ",(0,a.kt)("inlineCode",{parentName:"li"},"strict.lua")),(0,a.kt)("li",{parentName:"ul"},"A SignalService class")),(0,a.kt)("h3",{id:"changed-2"},"Changed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Signal is now called SignalService"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<SignalService>:Destroy()")," function and moved it to Signal class (",(0,a.kt)("inlineCode",{parentName:"li"},"<Signal>:Destroy()"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<Signal>:DisconnectAll()")," now uses ",(0,a.kt)("inlineCode",{parentName:"li"},"<Connection>:Disconnect()")," to all connections instead of setting the callback function to nil")),(0,a.kt)("h3",{id:"fixed-1"},"Fixed"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<Connection>:Disconnect()")," not setting the ",(0,a.kt)("inlineCode",{parentName:"li"},"<Connection>.Connected")," property to false"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"<Signal>:DisconnectAll()")," not disconnecting all of the connections when called at (almost) the same time")),(0,a.kt)("h2",{id:"010---2021-12-19"},"0.1.0 - 2021-12-19"),(0,a.kt)("p",null,"Initial development release"))}s.isMDXComponent=!0}}]);